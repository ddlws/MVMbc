# MoarVM/lib/MAST/Ops.nqp
# nqp/docs/ops.markdown
# nqp/src/vm/moar/QAST/QASTOperationsMAST.nqp
    # this one had what you wanted.


#`(enum reg-data-types (
    MVM_reg_int8 => 1,
    MVM_reg_int16 => 2,
    MVM_reg_int32 => 3,
    MVM_reg_int64 => 4,
    MVM_reg_num32 => 5,
    MVM_reg_num64 => 6,
    MVM_reg_str => 7,
    MVM_reg_obj => 8,
    MVM_reg_uint8 => 17,
    MVM_reg_uint16 => 18,
    MVM_reg_uint32 => 19,
    MVM_reg_uint64 => 20,
);
enum oper-data-types (
    MVM_operand_int8       => (MVM_reg_int8 +< 3),
    MVM_operand_int16      => (MVM_reg_int16 +< 3),
    MVM_operand_int32      => (MVM_reg_int32 +< 3),
    MVM_operand_int64      => (MVM_reg_int64 +< 3),
    MVM_operand_num32      => (MVM_reg_num32 +< 3),
    MVM_operand_num64      => (MVM_reg_num64 +< 3),
    MVM_operand_str        => (MVM_reg_str +< 3),
    MVM_operand_obj        => (MVM_reg_obj +< 3),
    MVM_operand_ins        => (9 +< 3),
    MVM_operand_type_var   => (10 +< 3),
    MVM_operand_coderef    => (12 +< 3),
    MVM_operand_callsite   => (13 +< 3),
    MVM_operand_spesh_slot => (16 +< 3),
    MVM_operand_uint8      => (MVM_reg_uint8 +< 3),
    MVM_operand_uint16     => (MVM_reg_uint16 +< 3),
    MVM_operand_uint32     => (MVM_reg_uint32 +< 3),
    MVM_operand_uint64     => (MVM_reg_uint64 +< 3),
    MVM_operand_type_mask  => (31 +< 3)
);

enum opflags (
    literal   =>  0,
    read_reg  =>  1,
    write_reg =>  2,
    read_lex  =>  3,
    write_lex =>  4,
    rw_mask   =>  7,
);
)
our @opcodes = [
    %{ :name("no_op"), :operands([]), :adverbs({:confprog(1)}) },
    %{ :name("const_i8"), :operands(["w(int8)", "int8"]), :adverbs({:pure(1)})},
    %{ :name("const_i16"), :operands(["w(int16)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("const_i32"), :operands(["w(int32)", "int32"]), :adverbs({:pure(1)})},
    %{ :name("const_i64"), :operands(["w(int64)", "int64"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("const_n32"), :operands(["w(num32)", "num32"]), :adverbs({:pure(1)})},
    %{ :name("const_n64"), :operands(["w(num64)", "num64"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("const_s"), :operands(["w(str)", "str"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("set"), :operands(["w(`1)", "r(`1)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("extend_u8"), :operands(["w(uint64)", "r(uint8)"]), :adverbs({:pure(1)})},
    %{ :name("extend_u16"), :operands(["w(uint64)", "r(uint16)"]), :adverbs({:pure(1)})},
    %{ :name("extend_u32"), :operands(["w(uint64)", "r(uint32)"]), :adverbs({:pure(1)})},
    %{ :name("extend_i8"), :operands(["w(int64)", "r(int8)"]), :adverbs({:pure(1)})},
    %{ :name("extend_i16"), :operands(["w(int64)", "r(int16)"]), :adverbs({:pure(1)})},
    %{ :name("extend_i32"), :operands(["w(int64)", "r(int32)"]), :adverbs({:pure(1)})},
    %{ :name("trunc_u8"), :operands(["w(uint8)", "r(uint64)"]), :adverbs({:pure(1)})},
    %{ :name("trunc_u16"), :operands(["w(uint16)", "r(uint64)"]), :adverbs({:pure(1)})},
    %{ :name("trunc_u32"), :operands(["w(uint32)", "r(uint64)"]), :adverbs({:pure(1)})},
    %{ :name("trunc_i8"), :operands(["w(int8)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("trunc_i16"), :operands(["w(int16)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("trunc_i32"), :operands(["w(int32)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("extend_n32"), :operands(["w(num64)", "r(num32)"]), :adverbs({:pure(1)})},
    %{ :name("trunc_n32"), :operands(["w(num32)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("goto"), :mark(".j"), :operands(["ins"]), :adverbs({:confprog(1)})},
    %{ :name("if_i"), :operands(["r(int64)", "ins"]), :adverbs({:confprog(1)})},
    %{ :name("unless_i"), :operands(["r(int64)", "ins"]), :adverbs({:confprog(1)})},
    %{ :name("if_n"), :operands(["r(num64)", "ins"])},
    %{ :name("unless_n"), :operands(["r(num64)", "ins"])},
    %{ :name("if_s"), :operands(["r(str)", "ins"])},
    %{ :name("unless_s"), :operands(["r(str)", "ins"])},
    %{ :name("if_s0"), :operands(["r(str)", "ins"])},
    %{ :name("unless_s0"), :operands(["r(str)", "ins"])},
    %{ :name("if_o"), :operands(["r(obj)", "ins"]), :adverbs({:invokish(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("unless_o"), :operands(["r(obj)", "ins"]), :adverbs({:invokish(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("jumplist"), :mark(":j"), :operands(["int64", "r(int64)"])},
    %{ :name("getlex"), :operands(["w(`1)", "rl(`1)"]), :adverbs({:deoptonepoint(1), :logged(1), :pure(1)})},
    %{ :name("bindlex"), :operands(["wl(`1)", "r(`1)"])},
    %{ :name("getlex_ni"), :operands(["w(int64)", "str"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("getlex_nn"), :operands(["w(num64)", "str"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("getlex_ns"), :operands(["w(str)", "str"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("getlex_no"), :operands(["w(obj)", "str"]), :adverbs({:deoptonepoint(1), :logged(1), :noinline(1), :pure(1)})},
    %{ :name("bindlex_ni"), :operands(["str", "r(int64)"]), :adverbs({:noinline(1)})},
    %{ :name("bindlex_nn"), :operands(["str", "r(num64)"]), :adverbs({:noinline(1)})},
    %{ :name("bindlex_ns"), :operands(["str", "r(str)"]), :adverbs({:noinline(1)})},
    %{ :name("bindlex_no"), :operands(["str", "r(obj)"]), :adverbs({:noinline(1)})},
    %{ :name("getlex_ng"), :operands(["w(obj)", "r(str)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("bindlex_ng"), :operands(["r(str)", "r(obj)"]), :adverbs({:noinline(1), :useshll(1)})},
    %{ :name("getdynlex"), :operands(["w(obj)", "r(str)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("binddynlex"), :operands(["r(str)", "r(obj)"]), :adverbs({:noinline(1)})},
    %{ :name("setlexvalue"), :operands(["r(obj)", "str", "r(obj)", "int16"])},
    %{ :name("lexprimspec"), :operands(["w(int64)", "r(obj)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("return_i"), :mark(".r"), :operands(["r(int64)"]), :adverbs({:useshll(1)})},
    %{ :name("return_n"), :mark(".r"), :operands(["r(num64)"]), :adverbs({:useshll(1)})},
    %{ :name("return_s"), :mark(".r"), :operands(["r(str)"]), :adverbs({:useshll(1)})},
    %{ :name("return_o"), :mark(".r"), :operands(["r(obj)"])},
    %{ :name("return"), :mark(".r"), :operands([])},
    %{ :name("eq_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("ne_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("lt_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("le_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("gt_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("ge_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("cmp_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("add_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("sub_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("mul_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("div_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("div_u"), :operands(["w(uint64)", "r(uint64)", "r(uint64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("mod_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("mod_u"), :operands(["w(uint64)", "r(uint64)", "r(uint64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("neg_i"), :operands(["w(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("abs_i"), :operands(["w(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("inc_i"), :operands(["w(int64)"])},
    %{ :name("inc_u"), :operands(["w(uint64)"])},
    %{ :name("dec_i"), :operands(["w(int64)"])},
    %{ :name("dec_u"), :operands(["w(uint64)"])},
    %{ :name("band_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("bor_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("bxor_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("bnot_i"), :operands(["w(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("blshift_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("brshift_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("pow_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("not_i"), :operands(["w(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("gcd_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("lcm_i"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("eq_n"), :operands(["w(int64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("ne_n"), :operands(["w(int64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("lt_n"), :operands(["w(int64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("le_n"), :operands(["w(int64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("gt_n"), :operands(["w(int64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("ge_n"), :operands(["w(int64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("cmp_n"), :operands(["w(int64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("add_n"), :operands(["w(num64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("sub_n"), :operands(["w(num64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("mul_n"), :operands(["w(num64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("div_n"), :operands(["w(num64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("mod_n"), :operands(["w(num64)", "r(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("neg_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("abs_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("pow_n"), :operands(["w(num64)", "r(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("ceil_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("floor_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("sin_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("asin_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("cos_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("acos_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("tan_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("atan_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("atan2_n"), :operands(["w(num64)", "r(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("sec_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("asec_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("sinh_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("cosh_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("tanh_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("sech_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("sqrt_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("log_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("exp_n"), :operands(["w(num64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("coerce_in"), :operands(["w(num64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("coerce_ni"), :operands(["w(int64)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("coerce_is"), :operands(["w(str)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("coerce_ns"), :operands(["w(str)", "r(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("coerce_si"), :operands(["w(int64)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("coerce_sn"), :operands(["w(num64)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("smrt_numify"), :operands(["w(num64)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("smrt_strify"), :operands(["w(str)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("prepargs"), :mark("+a"), :operands(["callsite"]), :adverbs({:predeoptonepoint(1)})},
    %{ :name("arg_i"), :mark("*a"), :operands(["int16", "r(int64)"])},
    %{ :name("arg_n"), :mark("*a"), :operands(["int16", "r(num64)"])},
    %{ :name("arg_s"), :mark("*a"), :operands(["int16", "r(str)"])},
    %{ :name("arg_o"), :mark("*a"), :operands(["int16", "r(obj)"])},
    %{ :name("argconst_i"), :mark("*a"), :operands(["int16", "int64"])},
    %{ :name("argconst_n"), :mark("*a"), :operands(["int16", "num64"])},
    %{ :name("argconst_s"), :mark("*a"), :operands(["int16", "str"])},
    %{ :name("invoke_v"), :mark("-a"), :operands(["r(obj)"]), :adverbs({:deoptallpoint(1), :logged(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("invoke_i"), :mark("-a"), :operands(["w(int64)", "r(obj)"]), :adverbs({:deoptallpoint(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("invoke_n"), :mark("-a"), :operands(["w(num64)", "r(obj)"]), :adverbs({:deoptallpoint(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("invoke_s"), :mark("-a"), :operands(["w(str)", "r(obj)"]), :adverbs({:deoptallpoint(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("invoke_o"), :mark("-a"), :operands(["w(obj)", "r(obj)"]), :adverbs({:deoptallpoint(1), :deoptonepoint(1), :logged(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("checkarity"), :operands(["int16", "int16"])},
    %{ :name("param_rp_i"), :mark(".p"), :operands(["w(int64)", "int16"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("param_rp_n"), :mark(".p"), :operands(["w(num64)", "int16"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("param_rp_s"), :mark(".p"), :operands(["w(str)", "int16"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("param_rp_o"), :mark(".p"), :operands(["w(obj)", "int16"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("param_op_i"), :mark(".p"), :operands(["w(int64)", "int16", "ins"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("param_op_n"), :mark(".p"), :operands(["w(num64)", "int16", "ins"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("param_op_s"), :mark(".p"), :operands(["w(str)", "int16", "ins"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("param_op_o"), :mark(".p"), :operands(["w(obj)", "int16", "ins"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("param_rn_i"), :operands(["w(int64)", "str"]), :adverbs({:noinline(1)})},
    %{ :name("param_rn_n"), :operands(["w(num64)", "str"]), :adverbs({:noinline(1)})},
    %{ :name("param_rn_s"), :operands(["w(str)", "str"]), :adverbs({:noinline(1)})},
    %{ :name("param_rn_o"), :operands(["w(obj)", "str"]), :adverbs({:noinline(1), :useshll(1)})},
    %{ :name("param_on_i"), :operands(["w(int64)", "str", "ins"]), :adverbs({:noinline(1)})},
    %{ :name("param_on_n"), :operands(["w(num64)", "str", "ins"]), :adverbs({:noinline(1)})},
    %{ :name("param_on_s"), :operands(["w(str)", "str", "ins"]), :adverbs({:noinline(1)})},
    %{ :name("param_on_o"), :operands(["w(obj)", "str", "ins"]), :adverbs({:noinline(1), :useshll(1)})},
    %{ :name("param_sp"), :mark(".p"), :operands(["w(obj)", "int16"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("param_sn"), :operands(["w(obj)"]), :adverbs({:noinline(1), :useshll(1)})},
    %{ :name("getcode"), :operands(["w(obj)", "coderef"]), :adverbs({:pure(1)})},
    %{ :name("caller"), :operands(["w(obj)", "r(int64)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("capturelex"), :operands(["r(obj)"]), :adverbs({:noinline(1)})},
    %{ :name("takeclosure"), :operands(["w(obj)", "r(obj)"]), :adverbs({:noinline(1)})},
    %{ :name("exception"), :operands(["w(obj)"])},
    %{ :name("bindexmessage"), :operands(["r(obj)", "r(str)"])},
    %{ :name("bindexpayload"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("bindexcategory"), :operands(["r(obj)", "r(int64)"])},
    %{ :name("getexmessage"), :operands(["w(str)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("getexpayload"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("getexcategory"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("throwdyn"), :operands(["w(obj)", "r(obj)"]), :adverbs({:throwish(1)})},
    %{ :name("throwlex"), :operands(["w(obj)", "r(obj)"]), :adverbs({:throwish(1)})},
    %{ :name("throwlexotic"), :operands(["w(obj)", "r(obj)"]), :adverbs({:throwish(1)})},
    %{ :name("throwcatdyn"), :operands(["w(obj)", "int64"]), :adverbs({:throwish(1)})},
    %{ :name("throwcatlex"), :operands(["w(obj)", "int64"]), :adverbs({:throwish(1)})},
    %{ :name("throwcatlexotic"), :operands(["w(obj)", "int64"]), :adverbs({:throwish(1)})},
    %{ :name("die"), :operands(["w(obj)", "r(str)"]), :adverbs({:throwish(1)})},
    %{ :name("rethrow"), :operands(["r(obj)"]), :adverbs({:throwish(1)})},
    %{ :name("resume"), :operands(["r(obj)"]), :adverbs({:throwish(1)})},
    %{ :name("takehandlerresult"), :operands(["w(obj)"])},
    %{ :name("DEPRECATED_33"), :operands(["w(obj)", "ins"])},
    %{ :name("DEPRECATED_34"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("backtracestrings"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("usecapture"), :operands(["w(obj)"]), :adverbs({:noinline(1)})},
    %{ :name("savecapture"), :operands(["w(obj)"]), :adverbs({:noinline(1)})},
    %{ :name("captureposelems"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("captureposarg"), :operands(["w(obj)", "r(obj)", "r(int64)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("captureposarg_i"), :operands(["w(int64)", "r(obj)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("captureposarg_n"), :operands(["w(num64)", "r(obj)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("captureposarg_s"), :operands(["w(str)", "r(obj)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("captureposprimspec"), :operands(["w(int64)", "r(obj)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("captureexistsnamed"), :operands(["w(int64)", "r(obj)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("capturehasnameds"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("invokewithcapture"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1)})},
    %{ :name("multicacheadd"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"])},
    %{ :name("multicachefind"), :operands(["w(obj)", "r(obj)", "r(obj)"])},
    %{ :name("null_s"), :operands(["w(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("isnull_s"), :operands(["w(int64)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("eq_s"), :operands(["w(int64)", "r(str)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("ne_s"), :operands(["w(int64)", "r(str)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("gt_s"), :operands(["w(int64)", "r(str)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("ge_s"), :operands(["w(int64)", "r(str)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("lt_s"), :operands(["w(int64)", "r(str)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("le_s"), :operands(["w(int64)", "r(str)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("cmp_s"), :operands(["w(int64)", "r(str)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("eqat_s"), :operands(["w(int64)", "r(str)", "r(str)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("eqatic_s"), :operands(["w(int64)", "r(str)", "r(str)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("haveat_s"), :operands(["w(int64)", "r(str)", "r(int64)", "r(int64)", "r(str)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("concat_s"), :operands(["w(str)", "r(str)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("repeat_s"), :operands(["w(str)", "r(str)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("substr_s"), :operands(["w(str)", "r(str)", "r(int64)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("index_s"), :operands(["w(int64)", "r(str)", "r(str)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("graphs_s"), :operands(["w(int64)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("codes_s"), :operands(["w(int64)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("getcp_s"), :operands(["w(int64)", "r(str)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("indexcp_s"), :operands(["w(int64)", "r(str)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("uc"), :operands(["w(str)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("lc"), :operands(["w(str)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("tc"), :operands(["w(str)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("split"), :operands(["w(obj)", "r(str)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("join"), :operands(["w(str)", "r(str)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("getcpbyname"), :operands(["w(int64)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("indexat"), :operands(["r(str)", "r(int64)", "str", "ins"])},
    %{ :name("indexnat"), :operands(["r(str)", "r(int64)", "str", "ins"])},
    %{ :name("unipropcode"), :operands(["w(int64)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("unipvalcode"), :operands(["w(int64)", "r(int64)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("hasuniprop"), :operands(["w(int64)", "r(str)", "r(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("hasunipropc"), :operands(["w(int64)", "r(str)", "r(int64)", "int16", "int16"]), :adverbs({:pure(1)})},
    %{ :name("chars"), :operands(["w(int64)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("chr"), :operands(["w(str)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("ordfirst"), :operands(["w(int64)", "r(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("ordat"), :operands(["w(int64)", "r(str)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("rindexfrom"), :operands(["w(int64)", "r(str)", "r(str)", "r(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("escape"), :operands(["w(str)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("flip"), :operands(["w(str)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("setbuffersize_fh"), :operands(["r(obj)", "r(int64)"])},
    %{ :name("iscclass"), :operands(["w(int64)", "r(int64)", "r(str)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("findcclass"), :operands(["w(int64)", "r(int64)", "r(str)", "r(int64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("findnotcclass"), :operands(["w(int64)", "r(int64)", "r(str)", "r(int64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("nfafromstatelist"), :operands(["w(obj)", "r(obj)", "r(obj)"])},
    %{ :name("nfarunproto"), :operands(["w(obj)", "r(obj)", "r(str)", "r(int64)"])},
    %{ :name("nfarunalt"), :operands(["r(obj)", "r(str)", "r(int64)", "r(obj)", "r(obj)", "r(obj)"])},
    %{ :name("radix"), :operands(["w(obj)", "r(int64)", "r(str)", "r(int64)", "r(int64)"]), :adverbs({:useshll(1)})},
    %{ :name("encode"), :operands(["w(obj)", "r(str)", "r(str)", "r(obj)"])},
    %{ :name("decode"), :operands(["w(str)", "r(obj)", "r(str)"])},
    %{ :name("istrue_s"), :operands(["w(int64)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("isfalse_s"), :operands(["w(int64)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("null"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("isnull"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("ifnonnull"), :operands(["r(obj)", "ins"]), :adverbs({:specializable(1)})},
    %{ :name("findmeth"), :operands(["w(obj)", "r(obj)", "str"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("findmeth_s"), :operands(["w(obj)", "r(obj)", "r(str)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("can"), :operands(["w(int64)", "r(obj)", "str"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("can_s"), :operands(["w(int64)", "r(obj)", "r(str)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("create"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("clone"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("isconcrete"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("rebless"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:deoptonepoint(1)})},
    %{ :name("istype"), :operands(["w(int64)", "r(obj)", "r(obj)"]), :adverbs({:confprog(1), :invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("objprimspec"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("gethow"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("getwhat"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("getwho"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("setwho"), :operands(["w(obj)", "r(obj)", "r(obj)"])},
    %{ :name("reprname"), :operands(["w(str)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("getwhere"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("eqaddr"), :operands(["w(int64)", "r(obj)", "r(obj)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("bindattr_i"), :operands(["r(obj)", "r(obj)", "str", "r(int64)", "int16"]), :adverbs({:specializable(1)})},
    %{ :name("bindattr_n"), :operands(["r(obj)", "r(obj)", "str", "r(num64)", "int16"]), :adverbs({:specializable(1)})},
    %{ :name("bindattr_s"), :operands(["r(obj)", "r(obj)", "str", "r(str)", "int16"]), :adverbs({:specializable(1)})},
    %{ :name("bindattr_o"), :operands(["r(obj)", "r(obj)", "str", "r(obj)", "int16"]), :adverbs({:specializable(1)})},
    %{ :name("bindattrs_i"), :operands(["r(obj)", "r(obj)", "r(str)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindattrs_n"), :operands(["r(obj)", "r(obj)", "r(str)", "r(num64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindattrs_s"), :operands(["r(obj)", "r(obj)", "r(str)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("bindattrs_o"), :operands(["r(obj)", "r(obj)", "r(str)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("getattr_i"), :operands(["w(int64)", "r(obj)", "r(obj)", "str", "int16"]), :adverbs({:specializable(1)})},
    %{ :name("getattr_n"), :operands(["w(num64)", "r(obj)", "r(obj)", "str", "int16"]), :adverbs({:specializable(1)})},
    %{ :name("getattr_s"), :operands(["w(str)", "r(obj)", "r(obj)", "str", "int16"]), :adverbs({:specializable(1)})},
    %{ :name("getattr_o"), :operands(["w(obj)", "r(obj)", "r(obj)", "str", "int16"]), :adverbs({:confprog(1), :deoptonepoint(1), :logged(1), :specializable(1)})},
    %{ :name("getattrs_i"), :operands(["w(int64)", "r(obj)", "r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("getattrs_n"), :operands(["w(num64)", "r(obj)", "r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("getattrs_s"), :operands(["w(str)", "r(obj)", "r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("getattrs_o"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(str)"]), :adverbs({:deoptonepoint(1), :logged(1), :specializable(1)})},
    %{ :name("attrinited"), :operands(["w(int64)", "r(obj)", "r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("box_i"), :operands(["w(obj)", "r(int64)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("box_n"), :operands(["w(obj)", "r(num64)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("box_s"), :operands(["w(obj)", "r(str)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("unbox_i"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("unbox_n"), :operands(["w(num64)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("unbox_s"), :operands(["w(str)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("atpos_i"), :operands(["w(int64)", "r(obj)", "r(int64)"]), :adverbs({:confprog(1), :specializable(1)})},
    %{ :name("atpos_n"), :operands(["w(num64)", "r(obj)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("atpos_s"), :operands(["w(str)", "r(obj)", "r(int64)"]), :adverbs({:confprog(1), :specializable(1)})},
    %{ :name("atpos_o"), :operands(["w(obj)", "r(obj)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindpos_i"), :operands(["r(obj)", "r(int64)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindpos_n"), :operands(["r(obj)", "r(int64)", "r(num64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindpos_s"), :operands(["r(obj)", "r(int64)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("bindpos_o"), :operands(["r(obj)", "r(int64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("push_i"), :operands(["r(obj)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("push_n"), :operands(["r(obj)", "r(num64)"]), :adverbs({:specializable(1)})},
    %{ :name("push_s"), :operands(["r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("push_o"), :operands(["r(obj)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("pop_i"), :operands(["w(int64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("pop_n"), :operands(["w(num64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("pop_s"), :operands(["w(str)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("pop_o"), :operands(["w(obj)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("shift_i"), :operands(["w(int64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("shift_n"), :operands(["w(num64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("shift_s"), :operands(["w(str)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("shift_o"), :operands(["w(obj)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("unshift_i"), :operands(["r(obj)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("unshift_n"), :operands(["r(obj)", "r(num64)"]), :adverbs({:specializable(1)})},
    %{ :name("unshift_s"), :operands(["r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("unshift_o"), :operands(["r(obj)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("splice"), :operands(["r(obj)", "r(obj)", "r(int64)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("setelemspos"), :operands(["r(obj)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("existspos"), :operands(["w(int64)", "r(obj)", "r(int64)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("atkey_i"), :operands(["w(int64)", "r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("atkey_n"), :operands(["w(num64)", "r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("atkey_s"), :operands(["w(str)", "r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("atkey_o"), :operands(["w(obj)", "r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("bindkey_i"), :operands(["r(obj)", "r(str)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindkey_n"), :operands(["r(obj)", "r(str)", "r(num64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindkey_s"), :operands(["r(obj)", "r(str)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("bindkey_o"), :operands(["r(obj)", "r(str)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("existskey"), :operands(["w(int64)", "r(obj)", "r(str)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("deletekey"), :operands(["r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("elems"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("knowhow"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("knowhowattr"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("newtype"), :operands(["w(obj)", "r(obj)", "r(str)"])},
    %{ :name("composetype"), :operands(["w(obj)", "r(obj)", "r(obj)"])},
    %{ :name("setmethcache"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("setmethcacheauth"), :operands(["r(obj)", "r(int64)"])},
    %{ :name("settypecache"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("settypecheckmode"), :operands(["r(obj)", "r(int64)"])},
    %{ :name("setboolspec"), :operands(["r(obj)", "r(int64)", "r(obj)"])},
    %{ :name("istrue"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :invokish(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("isfalse"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :invokish(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("bootint"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("bootnum"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("bootstr"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("bootarray"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("bootintarray"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("bootnumarray"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("bootstrarray"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("boothash"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("isint"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("isnum"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("isstr"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("islist"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("ishash"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("sethllconfig"), :operands(["r(str)", "r(obj)"])},
    %{ :name("hllboxtype_i"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("hllboxtype_n"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("hllboxtype_s"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("hlllist"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("hllhash"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("getcomp"), :operands(["w(obj)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("bindcomp"), :operands(["w(obj)", "r(str)", "r(obj)"])},
    %{ :name("getcurhllsym"), :operands(["w(obj)", "r(str)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("bindcurhllsym"), :operands(["w(obj)", "r(str)", "r(obj)"]), :adverbs({:useshll(1)})},
    %{ :name("gethllsym"), :operands(["w(obj)", "r(str)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("bindhllsym"), :operands(["r(str)", "r(str)", "r(obj)"])},
    %{ :name("settypehll"), :operands(["r(obj)", "r(str)"])},
    %{ :name("settypehllrole"), :operands(["r(obj)", "r(int64)"])},
    %{ :name("hllize"), :operands(["w(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1), :useshll(1)})},
    %{ :name("hllizefor"), :operands(["w(obj)", "r(obj)", "r(str)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("usecompileehllconfig"), :operands([]), :adverbs({:useshll(1)})},
    %{ :name("usecompilerhllconfig"), :operands([]), :adverbs({:useshll(1)})},
    %{ :name("iter"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1), :specializable(1), :useshll(1)})},
    %{ :name("iterkey_s"), :operands(["w(str)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("iterval"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("getcodename"), :operands(["w(str)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("iscoderef"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("getcodeobj"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("setcodeobj"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("setcodename"), :operands(["r(obj)", "r(str)"])},
    %{ :name("forceouterctx"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("setinvokespec"), :operands(["r(obj)", "r(obj)", "r(str)", "r(obj)"])},
    %{ :name("isinvokable"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("freshcoderef"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("markcodestatic"), :operands(["r(obj)"])},
    %{ :name("markcodestub"), :operands(["r(obj)"])},
    %{ :name("getstaticcode"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("getcodecuid"), :operands(["w(str)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("setdispatcher"), :operands(["r(obj)"])},
    %{ :name("takedispatcher"), :operands(["w(obj)"])},
    %{ :name("assign"), :operands(["r(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1)})},
    %{ :name("assignunchecked"), :operands(["r(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1)})},
    %{ :name("iscont"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("decont"), :operands(["w(obj)", "r(obj)"]), :adverbs({:deoptonepoint(1), :invokish(1), :logged(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("setcontspec"), :operands(["r(obj)", "r(str)", "r(obj)"])},
    %{ :name("sha1"), :operands(["w(str)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("createsc"), :operands(["w(obj)", "r(str)"])},
    %{ :name("scsetobj"), :operands(["r(obj)", "r(int64)", "r(obj)"])},
    %{ :name("scsetcode"), :operands(["r(obj)", "r(int64)", "r(obj)"])},
    %{ :name("scgetobj"), :operands(["w(obj)", "r(obj)", "r(int64)"])},
    %{ :name("scgethandle"), :operands(["w(str)", "r(obj)"])},
    %{ :name("scgetobjidx"), :operands(["w(int64)", "r(obj)", "r(obj)"])},
    %{ :name("scsetdesc"), :operands(["r(obj)", "r(str)"])},
    %{ :name("scobjcount"), :operands(["w(int64)", "r(obj)"])},
    %{ :name("setobjsc"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("getobjsc"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("serialize"), :operands(["w(str)", "r(obj)", "r(obj)"])},
    %{ :name("deserialize"), :operands(["r(str)", "r(obj)", "r(obj)", "r(obj)", "r(obj)"])},
    %{ :name("wval"), :operands(["w(obj)", "int16", "int16"]), :adverbs({:pure(1)})},
    %{ :name("wval_wide"), :operands(["w(obj)", "int16", "int64"]), :adverbs({:pure(1)})},
    %{ :name("scwbdisable"), :operands(["w(int64)"])},
    %{ :name("scwbenable"), :operands(["w(int64)"])},
    %{ :name("pushcompsc"), :operands(["r(obj)"])},
    %{ :name("popcompsc"), :operands(["w(obj)"])},
    %{ :name("scgetdesc"), :operands(["w(str)", "r(obj)"])},
    %{ :name("loadbytecode"), :operands(["w(str)", "r(str)"]), :adverbs({:invokish(1), :maycausedeopt(1), :noinline(1)})},
    %{ :name("newmixintype"), :operands(["w(obj)", "r(obj)", "r(str)"])},
    %{ :name("installconfprog"), :operands(["r(obj)", "r(obj)", "r(obj)"])},
    %{ :name("iscompunit"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("compunitmainline"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("compunitcodes"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("ctx"), :operands(["w(obj)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("ctxouter"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("ctxcaller"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("ctxlexpad"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("curcode"), :operands(["w(obj)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("callercode"), :operands(["w(obj)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("add_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("sub_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("mul_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("div_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("mod_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("neg_I"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("abs_I"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("cmp_I"), :operands(["w(int64)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("eq_I"), :operands(["w(int64)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("ne_I"), :operands(["w(int64)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("lt_I"), :operands(["w(int64)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("le_I"), :operands(["w(int64)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("gt_I"), :operands(["w(int64)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("ge_I"), :operands(["w(int64)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("bor_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("bxor_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("band_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("bnot_I"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("blshift_I"), :operands(["w(obj)", "r(obj)", "r(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("brshift_I"), :operands(["w(obj)", "r(obj)", "r(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("pow_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("gcd_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("lcm_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("expmod_I"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("isprime_I"), :operands(["w(int64)", "r(obj)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("rand_I"), :operands(["w(obj)", "r(obj)", "r(obj)"])},
    %{ :name("coerce_In"), :operands(["w(num64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("coerce_Is"), :operands(["w(str)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("coerce_nI"), :operands(["w(obj)", "r(num64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("coerce_sI"), :operands(["w(obj)", "r(str)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("isbig_I"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("bool_I"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("base_I"), :operands(["w(str)", "r(obj)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("radix_I"), :operands(["w(obj)", "r(int64)", "r(str)", "r(int64)", "r(int64)", "r(obj)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("div_In"), :operands(["w(num64)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("copy_f"), :operands(["r(str)", "r(str)"])},
    %{ :name("append_f"), :operands(["r(str)", "r(str)"])},
    %{ :name("rename_f"), :operands(["r(str)", "r(str)"])},
    %{ :name("delete_f"), :operands(["r(str)"])},
    %{ :name("chmod_f"), :operands(["r(str)", "r(int64)"])},
    %{ :name("exists_f"), :operands(["w(int64)", "r(str)"])},
    %{ :name("mkdir"), :operands(["r(str)", "r(int64)"])},
    %{ :name("rmdir"), :operands(["r(str)"])},
    %{ :name("open_dir"), :operands(["w(obj)", "r(str)"])},
    %{ :name("read_dir"), :operands(["w(str)", "r(obj)"])},
    %{ :name("close_dir"), :operands(["r(obj)"])},
    %{ :name("open_fh"), :operands(["w(obj)", "r(str)", "r(str)"])},
    %{ :name("close_fh"), :operands(["r(obj)"])},
    %{ :name("DEPRECATED_23"), :operands(["w(obj)", "r(str)", "r(str)"])},
    %{ :name("DEPRECATED_27"), :operands(["w(str)", "r(str)", "r(str)"])},
    %{ :name("DEPRECATED_28"), :operands(["r(str)", "r(str)", "r(str)"])},
    %{ :name("DEPRECATED_18"), :operands(["w(int64)", "r(obj)", "r(str)"])},
    %{ :name("seek_fh"), :operands(["r(obj)", "r(int64)", "r(int64)"])},
    %{ :name("lock_fh"), :operands(["w(int64)", "r(obj)", "r(int64)"])},
    %{ :name("unlock_fh"), :operands(["r(obj)"])},
    %{ :name("sync_fh"), :operands(["r(obj)"])},
    %{ :name("trunc_fh"), :operands(["r(obj)", "r(int64)"])},
    %{ :name("eof_fh"), :operands(["w(int64)", "r(obj)"])},
    %{ :name("getstdin"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("getstdout"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("getstderr"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("connect_sk"), :operands(["r(obj)", "r(str)", "r(int64)", "r(uint16)"])},
    %{ :name("socket"), :operands(["w(obj)", "r(int64)"])},
    %{ :name("bind_sk"), :operands(["r(obj)", "r(str)", "r(int64)", "r(uint16)", "r(int64)"])},
    %{ :name("DEPRECATED_24"), :operands(["r(obj)", "r(str)"])},
    %{ :name("accept_sk"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("decodetocodes"), :operands(["r(obj)", "r(str)", "r(int64)", "r(obj)"])},
    %{ :name("encodefromcodes"), :operands(["r(obj)", "r(str)", "r(obj)"])},
    %{ :name("DEPRECATED_17"), :operands(["r(obj)", "r(str)"])},
    %{ :name("print"), :operands(["r(str)"])},
    %{ :name("say"), :operands(["r(str)"]), :adverbs({:confprog(1)})},
    %{ :name("DEPRECATED_22"), :operands(["w(str)", "r(obj)"])},
    %{ :name("tell_fh"), :operands(["w(int64)", "r(obj)"])},
    %{ :name("stat"), :operands(["w(int64)", "r(str)", "r(int64)"])},
    %{ :name("tryfindmeth"), :operands(["w(obj)", "r(obj)", "str"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("tryfindmeth_s"), :operands(["w(obj)", "r(obj)", "r(str)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("chdir"), :operands(["r(str)"])},
    %{ :name("srand"), :operands(["r(int64)"])},
    %{ :name("rand_i"), :operands(["w(int64)"]), :adverbs({:confprog(1)})},
    %{ :name("rand_n"), :operands(["w(num64)"]), :adverbs({:confprog(1)})},
    %{ :name("time_i"), :operands(["w(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("sleep"), :operands(["r(num64)"])},
    %{ :name("newthread"), :operands(["w(obj)", "r(obj)", "r(int64)"])},
    %{ :name("threadjoin"), :operands(["r(obj)"])},
    %{ :name("time_n"), :operands(["w(num64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("exit"), :operands(["r(int64)"]), :adverbs({:confprog(1)})},
    %{ :name("DEPRECATED_30"), :operands(["w(int64)", "r(str)", "r(str)", "r(obj)", "r(obj)", "r(obj)", "r(obj)", "r(int64)"])},
    %{ :name("cwd"), :operands(["w(str)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("clargs"), :operands(["w(obj)"]), :adverbs({:confprog(1), :pure(1), :useshll(1)})},
    %{ :name("getenvhash"), :operands(["w(obj)"]), :adverbs({:confprog(1), :pure(1), :useshll(1)})},
    %{ :name("loadlib"), :operands(["r(str)", "r(str)"])},
    %{ :name("freelib"), :operands(["r(str)"])},
    %{ :name("findsym"), :operands(["w(obj)", "r(str)", "r(str)"])},
    %{ :name("dropsym"), :operands(["r(obj)"])},
    %{ :name("loadext"), :operands(["r(str)", "r(str)"])},
    %{ :name("backendconfig"), :operands(["w(obj)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("getlexouter"), :operands(["w(obj)", "r(str)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexrel"), :operands(["w(obj)", "r(obj)", "r(str)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("getlexreldyn"), :operands(["w(obj)", "r(obj)", "r(str)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("getlexrelcaller"), :operands(["w(obj)", "r(obj)", "r(str)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("getlexcaller"), :operands(["w(obj)", "r(str)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("bitand_s"), :operands(["w(str)", "r(str)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("bitor_s"), :operands(["w(str)", "r(str)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("bitxor_s"), :operands(["w(str)", "r(str)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("isnanorinf"), :operands(["w(int64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("inf"), :operands(["w(num64)"]), :adverbs({:pure(1)})},
    %{ :name("neginf"), :operands(["w(num64)"]), :adverbs({:pure(1)})},
    %{ :name("nan"), :operands(["w(num64)"]), :adverbs({:pure(1)})},
    %{ :name("getpid"), :operands(["w(int64)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("DEPRECATED_29"), :operands(["w(int64)", "r(obj)", "r(str)", "r(obj)", "r(obj)", "r(obj)", "r(obj)", "r(int64)"])},
    %{ :name("filereadable"), :operands(["w(int64)", "r(str)"])},
    %{ :name("filewritable"), :operands(["w(int64)", "r(str)"])},
    %{ :name("fileexecutable"), :operands(["w(int64)", "r(str)"])},
    %{ :name("DEPRECATED_19"), :operands(["w(int64)", "r(obj)", "r(str)"])},
    %{ :name("capturenamedshash"), :operands(["w(obj)", "r(obj)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("read_fhb"), :operands(["r(obj)", "r(obj)", "r(int64)"])},
    %{ :name("write_fhb"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("replace"), :operands(["w(str)", "r(str)", "r(int64)", "r(int64)", "r(str)"])},
    %{ :name("newexception"), :operands(["w(obj)"])},
    %{ :name("permit"), :operands(["r(obj)", "r(int64)", "r(int64)"])},
    %{ :name("backtrace"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("symlink"), :operands(["r(str)", "r(str)"])},
    %{ :name("link"), :operands(["r(str)", "r(str)"])},
    %{ :name("gethostname"), :operands(["w(str)"])},
    %{ :name("exreturnafterunwind"), :operands(["r(obj)"])},
    %{ :name("vmeventsubscribe"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("continuationreset"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1)})},
    %{ :name("continuationcontrol"), :operands(["w(obj)", "r(int64)", "r(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1)})},
    %{ :name("continuationinvoke"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1)})},
    %{ :name("randscale_n"), :operands(["w(num64)", "r(num64)"])},
    %{ :name("uniisblock"), :operands(["w(int64)", "r(str)", "r(int64)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("assertparamcheck"), :operands(["r(int64)"]), :adverbs({:invokish(1), :maycausedeopt(1), :noinline(1)})},
    %{ :name("hintfor"), :operands(["w(int64)", "r(obj)", "r(str)"])},
    %{ :name("paramnamesused"), :operands([]), :adverbs({:noinline(1)})},
    %{ :name("getuniname"), :operands(["w(str)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("getuniprop_int"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("getuniprop_bool"), :operands(["w(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("getuniprop_str"), :operands(["w(str)", "r(int64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("matchuniprop"), :operands(["w(int64)", "r(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("nativecallbuild"), :operands(["w(int64)", "r(obj)", "r(str)", "r(str)", "r(str)", "r(obj)", "r(obj)"])},
    %{ :name("nativecallinvoke"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:deoptallpoint(1), :maycausedeopt(1)})},
    %{ :name("nativecallrefresh"), :operands(["r(obj)"])},
    %{ :name("threadrun"), :operands(["r(obj)"])},
    %{ :name("threadid"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("threadyield"), :operands([])},
    %{ :name("currentthread"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("lock"), :operands(["r(obj)"])},
    %{ :name("unlock"), :operands(["r(obj)"])},
    %{ :name("semacquire"), :operands(["r(obj)"])},
    %{ :name("semtryacquire"), :operands(["w(int64)", "r(obj)"])},
    %{ :name("semrelease"), :operands(["r(obj)"])},
    %{ :name("getlockcondvar"), :operands(["w(obj)", "r(obj)", "r(obj)"])},
    %{ :name("condwait"), :operands(["r(obj)"])},
    %{ :name("condsignalone"), :operands(["r(obj)"])},
    %{ :name("condsignalall"), :operands(["r(obj)"])},
    %{ :name("queuepoll"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("setmultispec"), :operands(["r(obj)", "r(obj)", "r(str)", "r(str)"])},
    %{ :name("ctxouterskipthunks"), :operands(["w(obj)", "r(obj)"]), :adverbs({:noinline(1)})},
    %{ :name("ctxcallerskipthunks"), :operands(["w(obj)", "r(obj)"]), :adverbs({:noinline(1)})},
    %{ :name("timer"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(int64)", "r(int64)", "r(obj)"])},
    %{ :name("cancel"), :operands(["r(obj)"])},
    %{ :name("signal"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(int64)", "r(obj)"])},
    %{ :name("watchfile"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(str)", "r(obj)"])},
    %{ :name("asyncconnect"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(str)", "r(int64)", "r(obj)"])},
    %{ :name("asynclisten"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(str)", "r(int64)", "r(int64)", "r(obj)"])},
    %{ :name("DEPRECATED_14"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)", "r(str)", "r(obj)"])},
    %{ :name("asyncwritebytes"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)", "r(obj)", "r(obj)"])},
    %{ :name("DEPRECATED_16"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)", "r(obj)"])},
    %{ :name("asyncreadbytes"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)", "r(obj)", "r(obj)"])},
    %{ :name("getlexstatic_o"), :operands(["w(obj)", "r(str)"]), :adverbs({:logged(1), :noinline(1), :pure(1), :specializable(1)})},
    %{ :name("getlexperinvtype_o"), :operands(["w(obj)", "r(str)"]), :adverbs({:logged(1), :noinline(1), :pure(1), :specializable(1)})},
    %{ :name("execname"), :operands(["w(str)"])},
    %{ :name("const_i64_16"), :operands(["w(int64)", "int16"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("const_i64_32"), :operands(["w(int64)", "int32"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("isnonnull"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("param_rn2_i"), :operands(["w(int64)", "str", "str"]), :adverbs({:noinline(1)})},
    %{ :name("param_rn2_n"), :operands(["w(num64)", "str", "str"]), :adverbs({:noinline(1)})},
    %{ :name("param_rn2_s"), :operands(["w(str)", "str", "str"]), :adverbs({:noinline(1)})},
    %{ :name("param_rn2_o"), :operands(["w(obj)", "str", "str"]), :adverbs({:noinline(1), :useshll(1)})},
    %{ :name("param_on2_i"), :operands(["w(int64)", "str", "str", "ins"]), :adverbs({:noinline(1)})},
    %{ :name("param_on2_n"), :operands(["w(num64)", "str", "str", "ins"]), :adverbs({:noinline(1)})},
    %{ :name("param_on2_s"), :operands(["w(str)", "str", "str", "ins"]), :adverbs({:noinline(1)})},
    %{ :name("param_on2_o"), :operands(["w(obj)", "str", "str", "ins"]), :adverbs({:noinline(1), :useshll(1)})},
    %{ :name("osrpoint"), :operands([]), :adverbs({:osrpoint(1)})},
    %{ :name("nativecallcast"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"])},
    %{ :name("spawnprocasync"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(str)", "r(obj)", "r(obj)"])},
    %{ :name("killprocasync"), :operands(["r(obj)", "r(int64)"])},
    %{ :name("startprofile"), :operands(["r(obj)"])},
    %{ :name("endprofile"), :operands(["w(obj)"])},
    %{ :name("objectid"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("settypefinalize"), :operands(["r(obj)", "r(int64)"])},
    %{ :name("force_gc"), :operands([])},
    %{ :name("nativecallglobal"), :operands(["w(obj)", "r(str)", "r(str)", "r(obj)", "r(obj)"])},
    %{ :name("DEPRECATED_32"), :operands(["w(int64)", "r(obj)"])},
    %{ :name("setparameterizer"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("parameterizetype"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1)})},
    %{ :name("typeparameterized"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("typeparameters"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("typeparameterat"), :operands(["w(obj)", "r(obj)", "r(int64)"])},
    %{ :name("readlink"), :operands(["w(str)", "r(str)"])},
    %{ :name("lstat"), :operands(["w(int64)", "r(str)", "r(int64)"])},
    %{ :name("iscont_i"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("iscont_n"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("iscont_s"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :pure(1), :specializable(1)})},
    %{ :name("assign_i"), :operands(["r(obj)", "r(int64)"]), :adverbs({:invokish(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("assign_n"), :operands(["r(obj)", "r(num64)"]), :adverbs({:invokish(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("assign_s"), :operands(["r(obj)", "r(str)"]), :adverbs({:invokish(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("decont_i"), :operands(["w(int64)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("decont_n"), :operands(["w(num64)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("decont_s"), :operands(["w(str)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("getrusage"), :operands(["r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("threadlockcount"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("DEPRECATED_4"), :operands(["w(obj)", "r(str)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("getlexref_i"), :operands(["w(obj)", "rl(int64)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexref_n"), :operands(["w(obj)", "rl(num64)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexref_s"), :operands(["w(obj)", "rl(str)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexref_ni"), :operands(["w(obj)", "str"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexref_nn"), :operands(["w(obj)", "str"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexref_ns"), :operands(["w(obj)", "str"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("atposref_i"), :operands(["w(obj)", "r(obj)", "r(int64)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("atposref_n"), :operands(["w(obj)", "r(obj)", "r(int64)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("atposref_s"), :operands(["w(obj)", "r(obj)", "r(int64)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("getattrref_i"), :operands(["w(obj)", "r(obj)", "r(obj)", "str", "int16"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("getattrref_n"), :operands(["w(obj)", "r(obj)", "r(obj)", "str", "int16"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("getattrref_s"), :operands(["w(obj)", "r(obj)", "r(obj)", "str", "int16"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("getattrsref_i"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(str)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("getattrsref_n"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(str)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("getattrsref_s"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(str)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("nativecallsizeof"), :operands(["w(int64)", "r(obj)"])},
    %{ :name("encodenorm"), :operands(["r(str)", "r(str)", "r(int64)", "r(obj)"])},
    %{ :name("normalizecodes"), :operands(["r(obj)", "r(int64)", "r(obj)"])},
    %{ :name("strfromcodes"), :operands(["w(str)", "r(obj)"])},
    %{ :name("strtocodes"), :operands(["r(str)", "r(int64)", "r(obj)"])},
    %{ :name("getcodelocation"), :operands(["w(obj)", "r(obj)"]), :adverbs({:confprog(1), :pure(1)})},
    %{ :name("eqatim_s"), :operands(["w(int64)", "r(str)", "r(str)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("ordbaseat"), :operands(["w(int64)", "r(str)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("neverrepossess"), :operands(["r(obj)"])},
    %{ :name("scdisclaim"), :operands(["r(obj)"])},
    %{ :name("DEPRECATED_31"), :operands(["w(obj)"])},
    %{ :name("atpos2d_i"), :operands(["w(int64)", "r(obj)", "r(int64)", "r(int64)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("atpos2d_n"), :operands(["w(num64)", "r(obj)", "r(int64)", "r(int64)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("atpos2d_s"), :operands(["w(str)", "r(obj)", "r(int64)", "r(int64)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("atpos2d_o"), :operands(["w(obj)", "r(obj)", "r(int64)", "r(int64)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("atpos3d_i"), :operands(["w(int64)", "r(obj)", "r(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("atpos3d_n"), :operands(["w(num64)", "r(obj)", "r(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("atpos3d_s"), :operands(["w(str)", "r(obj)", "r(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("atpos3d_o"), :operands(["w(obj)", "r(obj)", "r(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("atposnd_i"), :operands(["w(int64)", "r(obj)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("atposnd_n"), :operands(["w(num64)", "r(obj)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("atposnd_s"), :operands(["w(str)", "r(obj)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("atposnd_o"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("bindpos2d_i"), :operands(["r(obj)", "r(int64)", "r(int64)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindpos2d_n"), :operands(["r(obj)", "r(int64)", "r(int64)", "r(num64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindpos2d_s"), :operands(["r(obj)", "r(int64)", "r(int64)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("bindpos2d_o"), :operands(["r(obj)", "r(int64)", "r(int64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("bindpos3d_i"), :operands(["r(obj)", "r(int64)", "r(int64)", "r(int64)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindpos3d_n"), :operands(["r(obj)", "r(int64)", "r(int64)", "r(int64)", "r(num64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindpos3d_s"), :operands(["r(obj)", "r(int64)", "r(int64)", "r(int64)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("bindpos3d_o"), :operands(["r(obj)", "r(int64)", "r(int64)", "r(int64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("bindposnd_i"), :operands(["r(obj)", "r(obj)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindposnd_n"), :operands(["r(obj)", "r(obj)", "r(num64)"]), :adverbs({:specializable(1)})},
    %{ :name("bindposnd_s"), :operands(["r(obj)", "r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("bindposnd_o"), :operands(["r(obj)", "r(obj)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("dimensions"), :operands(["w(obj)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("setdimensions"), :operands(["r(obj)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("numdimensions"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("ctxcode"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("isrwcont"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("fc"), :operands(["w(str)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("DEPRECATED_25"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("DEPRECATED_21"), :operands(["w(str)", "r(obj)"])},
    %{ :name("encoderep"), :operands(["w(obj)", "r(str)", "r(str)", "r(str)", "r(obj)"])},
    %{ :name("istty_fh"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("multidimref_i"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("multidimref_n"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("multidimref_s"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("fileno_fh"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("asyncudp"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(str)", "r(int64)", "r(int64)", "r(obj)"])},
    %{ :name("DEPRECATED_15"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)", "r(str)", "r(obj)", "r(str)", "r(int64)"])},
    %{ :name("asyncwritebytesto"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)", "r(obj)", "r(obj)", "r(str)", "r(int64)"])},
    %{ :name("objprimbits"), :operands(["w(int64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("objprimunsigned"), :operands(["w(int64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("DEPRECATED_5"), :operands(["w(obj)", "r(int32)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("DEPRECATED_6"), :operands(["w(obj)", "r(int16)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("DEPRECATED_7"), :operands(["w(obj)", "r(int8)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("DEPRECATED_8"), :operands(["w(obj)", "r(num32)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("getlexref_i32"), :operands(["w(obj)", "rl(int32)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexref_i16"), :operands(["w(obj)", "rl(int16)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexref_i8"), :operands(["w(obj)", "rl(int8)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexref_n32"), :operands(["w(obj)", "rl(num32)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("box_u"), :operands(["w(obj)", "r(uint64)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("unbox_u"), :operands(["w(uint64)", "r(obj)"]), :adverbs({:pure(1), :specializable(1)})},
    %{ :name("coerce_iu"), :operands(["w(uint64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("coerce_ui"), :operands(["w(int64)", "r(uint64)"]), :adverbs({:pure(1)})},
    %{ :name("coerce_nu"), :operands(["w(uint64)", "r(num64)"]), :adverbs({:pure(1)})},
    %{ :name("coerce_un"), :operands(["w(num64)", "r(uint64)"]), :adverbs({:pure(1)})},
    %{ :name("decont_u"), :operands(["w(uint64)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1), :specializable(1)})},
    %{ :name("DEPRECATED_9"), :operands(["w(obj)", "r(uint64)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("DEPRECATED_10"), :operands(["w(obj)", "r(uint32)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("DEPRECATED_11"), :operands(["w(obj)", "r(uint16)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("DEPRECATED_12"), :operands(["w(obj)", "r(uint8)"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("getlexref_u"), :operands(["w(obj)", "rl(uint64)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexref_u32"), :operands(["w(obj)", "rl(uint32)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexref_u16"), :operands(["w(obj)", "rl(uint16)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("getlexref_u8"), :operands(["w(obj)", "rl(uint8)"]), :adverbs({:noinline(1), :pure(1), :useshll(1)})},
    %{ :name("param_rp_u"), :operands(["w(uint64)", "int16"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("param_op_u"), :operands(["w(uint64)", "int16", "ins"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("param_rn_u"), :operands(["w(uint64)", "str"]), :adverbs({:noinline(1)})},
    %{ :name("param_on_u"), :operands(["w(uint64)", "str", "ins"]), :adverbs({:noinline(1)})},
    %{ :name("param_rn2_u"), :operands(["w(uint64)", "str", "str"]), :adverbs({:noinline(1)})},
    %{ :name("param_on2_u"), :operands(["w(uint64)", "str", "str", "ins"]), :adverbs({:noinline(1)})},
    %{ :name("stat_time"), :operands(["w(num64)", "r(str)", "r(int64)"])},
    %{ :name("lstat_time"), :operands(["w(num64)", "r(str)", "r(int64)"])},
    %{ :name("setdebugtypename"), :operands(["r(obj)", "r(str)"])},
    %{ :name("loadbytecodebuffer"), :operands(["r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1), :noinline(1)})},
    %{ :name("loadbytecodefh"), :operands(["r(obj)", "r(str)"]), :adverbs({:invokish(1), :maycausedeopt(1), :noinline(1)})},
    %{ :name("throwpayloadlex"), :operands(["w(obj)", "int64", "r(obj)"]), :adverbs({:throwish(1)})},
    %{ :name("throwpayloadlexcaller"), :operands(["w(obj)", "int64", "r(obj)"]), :adverbs({:throwish(1)})},
    %{ :name("lastexpayload"), :operands(["w(obj)"])},
    %{ :name("cancelnotify"), :operands(["r(obj)", "r(obj)", "r(obj)"])},
    %{ :name("decoderconfigure"), :operands(["r(obj)", "r(str)", "r(obj)"])},
    %{ :name("decodersetlineseps"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("decoderaddbytes"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("decodertakechars"), :operands(["w(str)", "r(obj)", "r(int64)"])},
    %{ :name("decodertakeallchars"), :operands(["w(str)", "r(obj)"])},
    %{ :name("decodertakeavailablechars"), :operands(["w(str)", "r(obj)"])},
    %{ :name("decodertakeline"), :operands(["w(str)", "r(obj)", "r(int64)", "r(int64)"])},
    %{ :name("decoderbytesavailable"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("decodertakebytes"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(int64)"])},
    %{ :name("decoderempty"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("indexingoptimized"), :operands(["w(str)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("captureinnerlex"), :operands(["r(obj)"]), :adverbs({:noinline(1)})},
    %{ :name("unicmp_s"), :operands(["w(int64)", "r(str)", "r(str)", "r(int64)", "r(int64)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("setdispatcherfor"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("strfromname"), :operands(["w(str)", "r(str)"]), :adverbs({:pure(1)})},
    %{ :name("indexic_s"), :operands(["w(int64)", "r(str)", "r(str)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("getport_sk"), :operands(["w(int64)", "r(obj)"])},
    %{ :name("cpucores"), :operands(["w(int64)"]), :adverbs({:pure(1)})},
    %{ :name("eqaticim_s"), :operands(["w(int64)", "r(str)", "r(str)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("indexicim_s"), :operands(["w(int64)", "r(str)", "r(str)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("decodertakecharseof"), :operands(["w(str)", "r(obj)", "r(int64)"])},
    %{ :name("indexim_s"), :operands(["w(int64)", "r(str)", "r(str)", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("cas_o"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("cas_i"), :operands(["w(int64)", "r(obj)", "r(int64)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("atomicinc_i"), :operands(["w(int64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("atomicdec_i"), :operands(["w(int64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("atomicadd_i"), :operands(["w(int64)", "r(obj)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("atomicload_o"), :operands(["w(obj)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("atomicload_i"), :operands(["w(int64)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("atomicstore_o"), :operands(["r(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("atomicstore_i"), :operands(["r(obj)", "r(int64)"]), :adverbs({:specializable(1)})},
    %{ :name("barrierfull"), :operands([])},
    %{ :name("coveragecontrol"), :operands(["r(int64)"])},
    %{ :name("nativeinvoke_v"), :mark("-a"), :operands(["r(obj)", "r(obj)"]), :adverbs({:deoptallpoint(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("nativeinvoke_i"), :mark("-a"), :operands(["w(int64)", "r(obj)", "r(obj)"]), :adverbs({:deoptallpoint(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("nativeinvoke_n"), :mark("-a"), :operands(["w(num64)", "r(obj)", "r(obj)"]), :adverbs({:deoptallpoint(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("nativeinvoke_s"), :mark("-a"), :operands(["w(str)", "r(obj)", "r(obj)"]), :adverbs({:deoptallpoint(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("nativeinvoke_o"), :mark("-a"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:deoptallpoint(1), :maycausedeopt(1), :specializable(1)})},
    %{ :name("getarg_i"), :operands(["w(int64)", "r(int16)"])},
    %{ :name("getarg_n"), :operands(["w(num64)", "r(int16)"])},
    %{ :name("getarg_s"), :operands(["w(str)", "r(int16)"])},
    %{ :name("getarg_o"), :operands(["w(obj)", "r(int16)"])},
    %{ :name("coerce_II"), :operands(["w(obj)", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("encoderepconf"), :operands(["w(obj)", "r(str)", "r(str)", "r(str)", "r(obj)", "r(int64)"])},
    %{ :name("encodeconf"), :operands(["w(obj)", "r(str)", "r(str)", "r(obj)", "r(int64)"])},
    %{ :name("decodeconf"), :operands(["w(str)", "r(obj)", "r(str)", "r(int64)"])},
    %{ :name("decoderepconf"), :operands(["w(str)", "r(obj)", "r(str)", "r(str)", "r(int64)"])},
    %{ :name("getppid"), :operands(["w(int64)"])},
    %{ :name("getsignals"), :operands(["w(obj)"]), :adverbs({:useshll(1)})},
    %{ :name("slice"), :operands(["w(obj)", "r(obj)", "r(int64)", "r(int64)"])},
    %{ :name("speshreg"), :operands(["r(str)", "r(str)", "r(obj)"])},
    %{ :name("speshresolve"), :mark("-a"), :operands(["w(obj)", "str"]), :adverbs({:deoptonepoint(1), :invokish(1), :logged(1), :noinline(1), :specializable(1)})},
    %{ :name("speshguardtype"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("speshguardconcrete"), :operands(["r(obj)"])},
    %{ :name("speshguardtypeobj"), :operands(["r(obj)"])},
    %{ :name("speshguardobj"), :operands(["r(obj)"])},
    %{ :name("speshguardgetattr"), :operands(["w(obj)", "r(obj)", "r(obj)", "str"])},
    %{ :name("atomicbindattr_o"), :operands(["r(obj)", "r(obj)", "r(str)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("casattr_o"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(str)", "r(obj)", "r(obj)"]), :adverbs({:specializable(1)})},
    %{ :name("atkey_u"), :operands(["w(uint64)", "r(obj)", "r(str)"]), :adverbs({:specializable(1)})},
    %{ :name("coerce_us"), :operands(["w(str)", "r(uint64)"]), :adverbs({:pure(1)})},
    %{ :name("speshguardnotobj"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("hllbool"), :operands(["w(obj)", "r(int64)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("hllboolfor"), :operands(["w(obj)", "r(int64)", "r(str)"]), :adverbs({:pure(1), :useshll(1)})},
    %{ :name("decodelocaltime"), :operands(["w(obj)", "r(int64)"])},
    %{ :name("fork"), :operands(["w(int64)"])},
    %{ :name("buffertocu"), :operands(["w(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1)})},
    %{ :name("writeint"), :operands(["r(obj)", "r(int64)", "r(int64)", "r(uint64)"])},
    %{ :name("writeuint"), :operands(["r(obj)", "r(int64)", "r(uint64)", "r(uint64)"])},
    %{ :name("writenum"), :operands(["r(obj)", "r(uint64)", "r(num64)", "r(uint64)"])},
    %{ :name("serializetobuf"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"])},
    %{ :name("readint"), :operands(["w(int64)", "r(obj)", "r(uint64)", "r(uint64)"])},
    %{ :name("readuint"), :operands(["w(uint64)", "r(obj)", "r(uint64)", "r(uint64)"])},
    %{ :name("readnum"), :operands(["w(num64)", "r(obj)", "r(uint64)", "r(uint64)"])},
    %{ :name("smrt_intify"), :operands(["w(int64)", "r(obj)"]), :adverbs({:confprog(1), :invokish(1), :maycausedeopt(1), :pure(1)})},
    %{ :name("uname"), :operands(["w(obj)"]), :adverbs({:pure(1)})},
    %{ :name("freemem"), :operands(["w(int64)"]), :adverbs({:pure(1)})},
    %{ :name("totalmem"), :operands(["w(int64)"]), :adverbs({:pure(1)})},
    %{ :name("nextdispatcherfor"), :operands(["r(obj)", "r(obj)"])},
    %{ :name("takenextdispatcher"), :operands(["w(obj)"])},
    %{ :name("sp_guard"), :mark(".s"), :operands(["w(obj)", "r(obj)", "sslot", "uint32"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_guardconc"), :mark(".s"), :operands(["w(obj)", "r(obj)", "sslot", "uint32"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_guardtype"), :mark(".s"), :operands(["w(obj)", "r(obj)", "sslot", "uint32"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_guardsf"), :mark(".s"), :operands(["r(obj)", "sslot", "uint32"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_guardsfouter"), :mark(".s"), :operands(["r(obj)", "sslot", "uint32"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_guardobj"), :mark(".s"), :operands(["w(obj)", "r(obj)", "sslot", "uint32"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_guardnotobj"), :mark(".s"), :operands(["w(obj)", "r(obj)", "sslot", "uint32"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_guardjustconc"), :mark(".s"), :operands(["w(obj)", "r(obj)", "uint32"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_guardjusttype"), :mark(".s"), :operands(["w(obj)", "r(obj)", "uint32"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_rebless"), :mark(".s"), :operands(["w(obj)", "r(obj)", "r(obj)", "uint32"]), :adverbs({:maycausedeopt(1), :noinline(1)})},
    %{ :name("sp_resolvecode"), :mark(".s"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("sp_decont"), :mark(".s"), :operands(["w(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1), :pure(1)})},
    %{ :name("sp_getlex_o"), :mark(".s"), :operands(["w(obj)", "rl(obj)"]), :adverbs({:pure(1)})},
    %{ :name("sp_getlex_ins"), :mark(".s"), :operands(["w(`1)", "rl(`1)"]), :adverbs({:pure(1)})},
    %{ :name("sp_getlex_no"), :mark(".s"), :operands(["w(obj)", "str"]), :adverbs({:noinline(1), :pure(1)})},
    %{ :name("sp_bindlex_in"), :mark(".s"), :operands(["wl(`1)", "r(`1)"])},
    %{ :name("sp_bindlex_os"), :mark(".s"), :operands(["wl(`1)", "r(`1)"])},
    %{ :name("sp_getarg_o"), :mark(".s"), :operands(["w(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_getarg_i"), :mark(".s"), :operands(["w(int64)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_getarg_n"), :mark(".s"), :operands(["w(num64)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_getarg_s"), :mark(".s"), :operands(["w(str)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_fastinvoke_v"), :mark(".s"), :operands(["r(obj)", "int16"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_fastinvoke_i"), :mark(".s"), :operands(["w(int64)", "r(obj)", "int16"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_fastinvoke_n"), :mark(".s"), :operands(["w(num64)", "r(obj)", "int16"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_fastinvoke_s"), :mark(".s"), :operands(["w(str)", "r(obj)", "int16"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_fastinvoke_o"), :mark(".s"), :operands(["w(obj)", "r(obj)", "int16"]), :adverbs({:maycausedeopt(1)})},
    %{ :name("sp_speshresolve"), :mark(".s"), :operands(["w(obj)", "str", "uint32", "sslot"]), :adverbs({:invokish(1), :maycausedeopt(1), :useshll(1)})},
    %{ :name("sp_paramnamesused"), :mark(".s"), :operands(["sslot"])},
    %{ :name("sp_getspeshslot"), :mark(".s"), :operands(["w(obj)", "sslot"]), :adverbs({:pure(1)})},
    %{ :name("sp_findmeth"), :mark(".s"), :operands(["w(obj)", "r(obj)", "str", "sslot"]), :adverbs({:maycausedeopt(1), :pure(1)})},
    %{ :name("sp_fastcreate"), :mark(".s"), :operands(["w(obj)", "int16", "sslot"]), :adverbs({:pure(1)})},
    %{ :name("sp_get_o"), :mark(".s"), :operands(["w(obj)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_get_i64"), :mark(".s"), :operands(["w(int64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_get_i32"), :mark(".s"), :operands(["w(int64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_get_i16"), :mark(".s"), :operands(["w(int64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_get_i8"), :mark(".s"), :operands(["w(int64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_get_n"), :mark(".s"), :operands(["w(num64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_get_s"), :mark(".s"), :operands(["w(str)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_bind_o"), :mark(".s"), :operands(["r(obj)", "int16", "r(obj)"])},
    %{ :name("sp_bind_i64"), :mark(".s"), :operands(["r(obj)", "int16", "r(int64)"])},
    %{ :name("sp_bind_i32"), :mark(".s"), :operands(["r(obj)", "int16", "r(int64)"])},
    %{ :name("sp_bind_i16"), :mark(".s"), :operands(["r(obj)", "int16", "r(int64)"])},
    %{ :name("sp_bind_i8"), :mark(".s"), :operands(["r(obj)", "int16", "r(int64)"])},
    %{ :name("sp_bind_n"), :mark(".s"), :operands(["r(obj)", "int16", "r(num64)"])},
    %{ :name("sp_bind_s"), :mark(".s"), :operands(["r(obj)", "int16", "r(str)"])},
    %{ :name("sp_bind_s_nowb"), :mark(".s"), :operands(["r(obj)", "int16", "r(str)"])},
    %{ :name("sp_p6oget_o"), :mark(".s"), :operands(["w(obj)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_p6ogetvt_o"), :mark(".s"), :operands(["w(obj)", "r(obj)", "int16", "sslot"])},
    %{ :name("sp_p6ogetvc_o"), :mark(".s"), :operands(["w(obj)", "r(obj)", "int16", "sslot"])},
    %{ :name("sp_p6oget_i"), :mark(".s"), :operands(["w(int64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_p6oget_n"), :mark(".s"), :operands(["w(num64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_p6oget_s"), :mark(".s"), :operands(["w(str)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_p6oget_bi"), :mark(".s"), :operands(["w(int64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_p6obind_o"), :mark(".s"), :operands(["r(obj)", "int16", "r(obj)"])},
    %{ :name("sp_p6obind_i"), :mark(".s"), :operands(["r(obj)", "int16", "r(int64)"])},
    %{ :name("sp_p6obind_n"), :mark(".s"), :operands(["r(obj)", "int16", "r(num64)"])},
    %{ :name("sp_p6obind_s"), :mark(".s"), :operands(["r(obj)", "int16", "r(str)"])},
    %{ :name("sp_p6oget_i32"), :mark(".s"), :operands(["w(int64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_p6obind_i32"), :mark(".s"), :operands(["r(obj)", "int16", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("sp_getvt_o"), :mark(".s"), :operands(["w(obj)", "r(obj)", "int16", "sslot"])},
    %{ :name("sp_getvc_o"), :mark(".s"), :operands(["w(obj)", "r(obj)", "int16", "sslot"])},
    %{ :name("sp_fastbox_i"), :mark(".s"), :operands(["w(obj)", "int16", "sslot", "int16", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("sp_fastbox_bi"), :mark(".s"), :operands(["w(obj)", "int16", "sslot", "int16", "r(int64)"]), :adverbs({:pure(1)})},
    %{ :name("sp_fastbox_i_ic"), :mark(".s"), :operands(["w(obj)", "int16", "sslot", "int16", "r(int64)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_fastbox_bi_ic"), :mark(".s"), :operands(["w(obj)", "int16", "sslot", "int16", "r(int64)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_deref_get_i64"), :mark(".s"), :operands(["w(int64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_deref_get_n"), :mark(".s"), :operands(["w(num64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_deref_bind_i64"), :mark(".s"), :operands(["r(obj)", "r(int64)", "int16"])},
    %{ :name("sp_deref_bind_n"), :mark(".s"), :operands(["r(obj)", "r(num64)", "int16"])},
    %{ :name("sp_getlexvia_o"), :mark(".s"), :operands(["w(obj)", "int16", "int16", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("sp_getlexvia_ins"), :mark(".s"), :operands(["w(`1)", "int16", "int16", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("sp_bindlexvia_os"), :mark(".s"), :operands(["int16", "int16", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("sp_bindlexvia_in"), :mark(".s"), :operands(["int16", "int16", "r(obj)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("sp_getstringfrom"), :mark(".s"), :operands(["w(str)", "sslot", "int32"]), :adverbs({:pure(1)})},
    %{ :name("sp_getwvalfrom"), :mark(".s"), :operands(["w(obj)", "sslot", "int64"]), :adverbs({:pure(1)})},
    %{ :name("sp_jit_enter"), :mark(".s"), :operands(["w(obj)"])},
    %{ :name("sp_boolify_iter"), :mark(".s"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("sp_boolify_iter_arr"), :mark(".s"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("sp_boolify_iter_hash"), :mark(".s"), :operands(["w(int64)", "r(obj)"]), :adverbs({:pure(1)})},
    %{ :name("sp_cas_o"), :mark(".s"), :operands(["w(obj)", "r(obj)", "r(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1)})},
    %{ :name("sp_atomicload_o"), :mark(".s"), :operands(["w(obj)", "r(obj)"])},
    %{ :name("sp_atomicstore_o"), :mark(".s"), :operands(["r(obj)", "r(obj)"]), :adverbs({:invokish(1), :maycausedeopt(1)})},
    %{ :name("sp_add_I"), :mark(".s"), :operands(["w(obj)", "int16", "sslot", "r(obj)", "r(obj)", "int16", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_sub_I"), :mark(".s"), :operands(["w(obj)", "int16", "sslot", "r(obj)", "r(obj)", "int16", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_mul_I"), :mark(".s"), :operands(["w(obj)", "int16", "sslot", "r(obj)", "r(obj)", "int16", "int16"]), :adverbs({:pure(1)})},
    %{ :name("sp_bool_I"), :mark(".s"), :operands(["w(int64)", "r(obj)", "int16"]), :adverbs({:pure(1)})},
    %{ :name("prof_enter"), :mark(".s"), :operands([])},
    %{ :name("prof_enterspesh"), :mark(".s"), :operands([])},
    %{ :name("prof_enterinline"), :mark(".s"), :operands(["sslot"])},
    %{ :name("prof_enternative"), :mark(".s"), :operands(["r(obj)"])},
    %{ :name("prof_exit"), :mark(".s"), :operands([])},
    %{ :name("prof_allocated"), :mark(".s"), :operands(["r(obj)"])},
    %{ :name("prof_replaced"), :mark(".s"), :operands(["sslot"])},
    %{ :name("ctw_check"), :mark(".s"), :operands(["r(obj)", "int16"])},
    %{ :name("coverage_log"), :mark(".s"), :operands(["str", "int32", "int32", "int64"])},
    %{ :name("breakpoint"), :mark(".s"), :operands(["int32", "int32"]) }
];
